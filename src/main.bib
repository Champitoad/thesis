@software{the_coq_development_team_2022_7313584,
  author    = {The Coq Development Team},
  title     = {The Coq Proof Assistant},
  month     = sep,
  year      = 2022,
  publisher = {Zenodo},
  version   = {8.16},
  doi       = {10.5281/zenodo.7313584},
  url       = {https://doi.org/10.5281/zenodo.7313584}
}

@inproceedings{10.1007/978-3-030-79876-5_37,
  author    = {Moura, Leonardo de
               and Ullrich, Sebastian},
  editor    = {Platzer, Andr{\'e}
               and Sutcliffe, Geoff},
  title     = {The Lean 4 Theorem Prover and Programming Language},
  booktitle = {Automated Deduction -- CADE 28},
  year      = {2021},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {625--635},
  abstract  = {Lean 4 is a reimplementation of the Lean interactive theorem prover (ITP) in Lean itself. It addresses many shortcomings of the previous versions and contains many new features. Lean 4 is fully extensible: users can modify and extend the parser, elaborator, tactics, decision procedures, pretty printer, and code generator. The new system has a hygienic macro system custom-built for ITPs. It contains a new typeclass resolution procedure based on tabled resolution, addressing significant performance problems reported by the growing user base. Lean 4 is also an efficient functional programming language based on a novel programming paradigm called functional but in-place. Efficient code generation is crucial for Lean users because many write custom proof automation procedures in Lean itself.},
  isbn      = {978-3-030-79876-5}
}

@inproceedings{10.1145/3497775.3503692,
  author    = {Donato, Pablo and Strub, Pierre-Yves and Werner, Benjamin},
  title     = {A Drag-and-Drop Proof Tactic},
  year      = {2022},
  isbn      = {9781450391825},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3497775.3503692},
  doi       = {10.1145/3497775.3503692},
  abstract  = {We explore the features of a user interface where formal proofs can be built through gestural actions. In particular, we show how proof construction steps can be associated to drag-and-drop actions. We argue that this can provide quick and intuitive proof construction steps. This work builds on theoretical tools coming from deep inference. It also resumes and integrates some ideas of the former proof-by-pointing project.},
  booktitle = {Proceedings of the 11th ACM SIGPLAN International Conference on Certified Programs and Proofs},
  pages     = {197–209},
  numpages  = {13},
  keywords  = {user interfaces, deep inference, logic, formal proofs},
  location  = {Philadelphia, PA, USA},
  series    = {CPP 2022}
}

@inproceedings{buildingblocks,
  author    = {Sorin Lerner and
               Stephen R. Foster and
               William G. Griswold},
  editor    = {Bo Begole and
               Jinwoo Kim and
               Kori Inkpen and
               Woontack Woo},
  title     = {Polymorphic Blocks: Formalism-Inspired {UI} for Structured Connectors},
  booktitle = {Proceedings of the 33rd Annual {ACM} Conference on Human Factors in
               Computing Systems, {CHI} 2015, Seoul, Republic of Korea, April 18-23,
               2015},
  pages     = {3063--3072},
  publisher = {{ACM}},
  year      = {2015},
  url       = {https://doi.org/10.1145/2702123.2702302},
  doi       = {10.1145/2702123.2702302},
  timestamp = {Fri, 12 Mar 2021 15:27:48 +0100},
  biburl    = {https://dblp.org/rec/conf/chi/LernerFG15.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@incollection{Chaudhuri2013,
  location    = {Berlin, Heidelberg},
  title       = {Subformula Linking as an Interaction Method},
  volume      = {7998},
  isbn        = {978-3-642-39633-5 978-3-642-39634-2},
  url         = {http://link.springer.com/10.1007/978-3-642-39634-2_28},
  abstract    = {Current techniques for building formal proofs interactively involve one or several proof languages for instructing an interpreter of the languages to build or check the proof being described. These linguistic approaches have a drawback: the languages are not generally portable, even though the nature of logical reasoning is universal. We propose a somewhat speculative alternative method that lets the user directly manipulate the text of the theorem, using non-linguistic metaphors. It uses a proof formalism based on linking subformulas, which is a variant of deep inference (inference rules are allowed to apply in any formula context) where the relevant formulas in a rule are allowed to be arbitrarily distant. We substantiate the design with a prototype implementation of a linking-based interactive prover for ﬁrst-order classical linear logic.},
  pages       = {386--401},
  booktitle   = {Interactive Theorem Proving},
  publisher   = {Springer Berlin Heidelberg},
  author      = {Chaudhuri, Kaustuv},
  editor      = {Blazy, Sandrine and Paulin-Mohring, Christine and Pichardie, David},
  editorb     = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Doug and Vardi, Moshe Y. and Weikum, Gerhard},
  editorbtype = {redactor},
  urldate     = {2020-04-21},
  date        = {2013},
  year        = {2013},
  langid      = {english},
  doi         = {10.1007/978-3-642-39634-2_28},
  note        = {Series Title: Lecture Notes in Computer Science},
  file        = {Chaudhuri - 2013 - Subformula Linking as an Interaction Method.pdf:/home/pablo/Zotero/storage/JABGNC97/Chaudhuri - 2013 - Subformula Linking as an Interaction Method.pdf:application/pdf}
}

@incollection{PbP,
  location    = {Berlin, Heidelberg},
  title       = {Proof by pointing},
  volume      = {789},
  isbn        = {978-3-540-57887-1 978-3-540-48383-0},
  url         = {http://link.springer.com/10.1007/3-540-57887-0_94},
  abstract    = {This paper presents a principle for using locations in logical expressions to guide the process of building proofs. Using a sequentstyle presentation of theorem provers, we annotate the inference rules to specify an algorithmthat associates the construction of a proof tree to a location within a goal sequent. This principle provides a natural and effective use of the mouse in the user-interface of computer proof assistants. The implementation of the algorithm in a variety of theorem provers is discussed.},
  pages       = {141--160},
  booktitle   = {Theoretical Aspects of Computer Software},
  publisher   = {Springer Berlin Heidelberg},
  author      = {Bertot, Yves and Kahn, Gilles and Théry, Laurent},
  editor      = {Hagiya, Masami and Mitchell, John C.},
  editorb     = {Goos, Gerhard and Hartmanis, Juris},
  editorbtype = {redactor},
  urldate     = {2020-04-21},
  date        = {1994},
  year        = {1994},
  langid      = {english},
  doi         = {10.1007/3-540-57887-0_94},
  note        = {Series Title: Lecture Notes in Computer Science}
}

@book{zhan-design-2019,
  title    = {Design of point-and-click user interfaces for proof assistants},
  abstract = {In interactive theorem proving, human users interact with proof assistants to construct and verify formal proofs. The most popular proof assistants today all have user interfaces that are largely text-based. This leads to a steep learning curve for new users of these tools. In this paper, we propose a framework for designing user interfaces for proof assistants based on pointing and clicking. While a main goal of the design is ease of learning for new users, we intend for the design to be suitable for real verification tasks. The design is also extensible, allowing custom proof methods and search functionality to be added in a convenient way. We implement our ideas in a web interface, with backend provided by holpy, a new system for interactive theorem proving implemented in Python. The resulting user interface is tested on theorems in logic, sets, functions, Peano arithmetic, and lists, demonstrating its applicability in a wide range of areas.},
  author   = {Zhan, Bohua and Ji, Zhenyan and Zhou, Wenfan and Xiang, Chaozhu and Hou, Jie and Sun, Wenhui},
  month    = aug,
  year     = {2019},
  file     = {Full Text PDF:C\:\\Users\\pablo\\Zotero\\storage\\JR53JYII\\Zhan et al. - 2019 - Design of point-and-click user interfaces for proo.pdf:application/pdf}
}

@article{ayers_graphical_2021,
  title    = {A {Graphical} {User} {Interface} {Framework} for {Formal} {Verification}},
  abstract = {We present the “ProofWidgets” framework for implementing general user interfaces (UIs) within an interactive theorem prover. The framework uses web technology and functional reactive programming, as well as metaprogramming features of advanced interactive theorem proving (ITP) systems to allow users to create arbitrary interactive UIs for representing the goal state. Users of the framework can create GUIs declaratively within the ITP’s metaprogramming language, without having to develop in multiple languages and without coordinated changes across multiple projects, which improves development time for new designs of UI. The ProofWidgets framework also allows UIs to make use of the full context of the theorem prover and the specialised libraries that ITPs offer, such as methods for dealing with expressions and tactics. The framework includes an extensible structured pretty-printing engine that enables advanced interaction with expressions such as interactive term rewriting. We exemplify the framework with an implementation for the leanprover-community fork of Lean 3. The framework is already in use by hundreds of contributors to the Lean mathematical library.},
  language = {en},
  author   = {Ayers, Edward W and Jamnik, Mateja and Gowers, W T},
  year     = {2021},
  pages    = {16},
  file     = {Ayers et al. - 2021 - A Graphical User Interface Framework for Formal Ve.pdf:/home/pablo/Zotero/storage/VNL359FV/Ayers et al. - 2021 - A Graphical User Interface Framework for Formal Ve.pdf:application/pdf}
}

@phdthesis{ayers_thesis,
  author   = {Ayers, Edward},
  school   = {University of Cambridge},
  title    = {A {Tool} for {Producing} {Verified}, {Explainable} {Proofs}.},
  year     = {2021},
  language = {en}
}

 @book{nipkow2002isabelle,
  title     = {Isabelle/HOL: a proof assistant for higher-order logic},
  author    = {Nipkow, Tobias and Paulson, Lawrence C and Wenzel, Markus},
  volume    = {2283},
  year      = {2002},
  publisher = {Springer Science \& Business Media}
} 


@article{peirce_algebra_1885,
  title      = {On the {Algebra} of {Logic}: {A} {Contribution} to the {Philosophy} of {Notation} [{Continued} in {Vol}. 7, no. 3]},
  volume     = {7},
  issn       = {0002-9327},
  shorttitle = {On the {Algebra} of {Logic}},
  url        = {https://www.jstor.org/stable/2369451},
  doi        = {10.2307/2369451},
  number     = {2},
  urldate    = {2023-03-05},
  journal    = {American Journal of Mathematics},
  author     = {Peirce, C. S.},
  year       = {1885},
  note       = {Publisher: The Johns Hopkins University Press},
  pages      = {180--196},
  file       = {JSTOR Full Text PDF:/home/pablo/Zotero/storage/A82ELS6F/Peirce - 1885 - On the Algebra of Logic A Contribution to the Phi.pdf:application/pdf}
}

@article{peirce_logic_1897,
  title   = {The {Logic} of {Relatives}},
  volume  = {7},
  issn    = {0026-9662},
  url     = {https://www.jstor.org/stable/27897407},
  number  = {2},
  urldate = {2023-03-05},
  journal = {The Monist},
  author  = {Peirce, Charles S.},
  year    = {1897},
  note    = {Publisher: Oxford University Press},
  pages   = {161--217},
  file    = {JSTOR Full Text PDF:/home/pablo/Zotero/storage/YIMTLUHP/Peirce - 1897 - The Logic of Relatives.pdf:application/pdf}
}

@book{Roberts+1973,
  url         = {https://doi.org/10.1515/9783110226225},
  title       = {The Existential Graphs of Charles S. Peirce},
  author      = {Don D. Roberts},
  publisher   = {De Gruyter Mouton},
  address     = {Berlin, Boston},
  doi         = {doi:10.1515/9783110226225},
  isbn        = {9783110226225},
  year        = {1973},
  lastchecked = {2023-03-06}
}

@article{sowa_conceptual_1976,
  title    = {Conceptual {Graphs} for a {Data} {Base} {Interface}},
  volume   = {20},
  doi      = {10.1147/rd.204.0336},
  abstract = {A data base system that supports natural language queries is not really natural if it requires the user to know how the data are represented. This paper defines a formalism, called conceptual graphs, that can describe data according to the userâs view and access data according to the systemâs view. In addition, the graphs can represent functional dependencies in the data base and support inferences and computations that are not explicit in the initial query.},
  journal  = {IBM Journal of Research and Development},
  author   = {Sowa, John},
  month    = jul,
  year     = {1976},
  pages    = {336},
  file     = {Full Text PDF:/home/pablo/Zotero/storage/QYJQ4JSJ/Sowa - 1976 - Conceptual Graphs for a Data Base Interface.pdf:application/pdf}
}

@book{10.7551/mitpress/3633.001.0001,
  author    = {Shin, Sun-Joo},
  title     = {{The Iconic Logic of Peirce's Graphs}},
  publisher = {The MIT Press},
  year      = {2002},
  month     = {05},
  abstract  = {{A case study of multimodal systems and a new interpretation of Charles S. Peirce's theory of reasoning and signs based on an analysis of his system of Existential Graphs.At the dawn of modern logic, Charles S. Peirce invented two types of logical systems, one symbolic and the other graphical. In this book Sun-Joo Shin explores the philosophical roots of the birth of Peirce's Existential Graphs in his theory of representation and logical notation. Shin demonstrates that Peirce is the first philosopher to lay a solid philosophical foundation for multimodal representation systems.Shin analyzes Peirce's well-known, but much-criticized nonsymbolic representation system. She presents a new approach to his graphical system based on her discovery of its unique nature and on a reconstruction of Peirce's theory of representation. By seeking to understand graphical systems on their own terms, she uncovers the reasons why graphical systems, and Existential Graphs in particular, have been underappreciated among logicians. Drawing on perspectives from the philosophy of mind, cognitive science, logic, and computer science, Shin provides evidence for a genuinely interdisciplinary project on multimodal reasoning.}},
  isbn      = {9780262283557},
  doi       = {10.7551/mitpress/3633.001.0001},
  url       = {https://doi.org/10.7551/mitpress/3633.001.0001}
}

@article{mellies_bifibrational_2016,
  title    = {A bifibrational reconstruction of {Lawvere}'s presheaf hyperdoctrine},
  url      = {http://arxiv.org/abs/1601.06098},
  abstract = {Combining insights from the study of type refinement systems and of monoidal closed chiralities, we show how to reconstruct Lawvere's hyperdoctrine of presheaves using a full and faithful embedding into a monoidal closed bifibration living now over the compact closed category of small categories and distributors. Besides revealing dualities which are not immediately apparent in the traditional presentation of the presheaf hyperdoctrine, this reconstruction leads us to an axiomatic treatment of directed equality predicates (modelled by hom presheaves), realizing a vision initially set out by Lawvere (1970). It also leads to a simple calculus of string diagrams (representing presheaves) that is highly reminiscent of C. S. Peirce's existential graphs for predicate logic, refining an earlier interpretation of existential graphs in terms of Boolean hyperdoctrines by Brady and Trimble. Finally, we illustrate how this work extends to a bifibrational setting a number of fundamental ideas of linear logic.},
  urldate  = {2022-02-07},
  journal  = {arXiv:1601.06098 [cs, math]},
  author   = {Melliès, Paul-André and Zeilberger, Noam},
  month    = aug,
  year     = {2016},
  note     = {arXiv: 1601.06098},
  keywords = {Computer Science - Logic in Computer Science, Mathematics - Logic, Mathematics - Category Theory},
  file     = {arXiv Fulltext PDF:/home/pablo/Zotero/storage/FMG8M6N5/Melliès et Zeilberger - 2016 - A bifibrational reconstruction of Lawvere's preshe.pdf:application/pdf;arXiv.org Snapshot:/home/pablo/Zotero/storage/GHD36HZ6/1601.html:text/html}
}

@article{brady_categorical_2000,
  title    = {A categorical interpretation of {C}.{S}. {Peirce}'s propositional logic {Alpha}},
  volume   = {149},
  issn     = {0022-4049},
  url      = {https://www.sciencedirect.com/science/article/pii/S0022404998001790},
  doi      = {10.1016/S0022-4049(98)00179-0},
  abstract = {C.S. Peirce's graphical system Alpha for propositional logic is given a geometric representation in terms of isotopy classes of planar diagrams, and surgery rules on these diagrams called illative transformations. An algebraic representation theorem is proven, stating that Alpha, as an equational theory, is isomorphic to the theory of Boolean algebras. The geometric and algebraic representations are extended to give multi-sorted analogues of Alpha. An interpretation of Alpha is given in terms of linear logic and the theory of closed categories.},
  language = {en},
  number   = {3},
  urldate  = {2021-11-25},
  journal  = {Journal of Pure and Applied Algebra},
  author   = {Brady, Geraldine and Trimble, Todd H.},
  month    = jun,
  year     = {2000},
  pages    = {213--239},
  file     = {ScienceDirect Full Text PDF:/home/pablo/Zotero/storage/2GG6WXIC/Brady et Trimble - 2000 - A categorical interpretation of C.S. Peirce's prop.pdf:application/pdf;ScienceDirect Snapshot:/home/pablo/Zotero/storage/S74DRB7W/S0022404998001790.html:text/html}
}

@misc{brady_string_nodate,
  title   = {A {String} {Diagram} {Calculus} for {Predicate} {Logic} and {C}. {S}. {Peirce}'s {System} {Beta}},
  url     = {https://ncatlab.org/nlab/files/BradyTrimbleString.pdf},
  urldate = {2023-02-22},
  author  = {Brady, Geraldine and Trimble, Todd H.},
  file    = {BradyTrimbleString.pdf:/home/pablo/Zotero/storage/JDGFFSB2/BradyTrimbleString.pdf:application/pdf}
}

@incollection{pietarinen_compositional_2020,
  address   = {Cham},
  title     = {Compositional {Diagrammatic} {First}-{Order} {Logic}},
  volume    = {12169},
  isbn      = {978-3-030-54248-1 978-3-030-54249-8},
  url       = {http://link.springer.com/10.1007/978-3-030-54249-8_32},
  abstract  = {Peirce’s β variant of Existential Graphs (EGs) is a diagrammatic formalism, equivalent in expressive power to classical ﬁrst-order logic. We show that the syntax of EGs can be presented as the arrows of a free symmetric monoidal category. The advantages of this approach are (i) that the associated string diagrams share the visual features of EGs while (ii) enabling a rigorous distinction between “free” and “bound” variables. Indeed, this diagrammatic language leads to a compositional relationship of the syntax with the semantics of logic: we obtain models as structure-preserving monoidal functors to the category of relations.},
  language  = {en},
  urldate   = {2023-02-05},
  booktitle = {Diagrammatic {Representation} and {Inference}},
  publisher = {Springer International Publishing},
  author    = {Haydon, Nathan and Sobociński, Paweł},
  editor    = {Pietarinen, Ahti-Veikko and Chapman, Peter and Bosveld-de Smet, Leonie and Giardino, Valeria and Corter, James and Linker, Sven},
  year      = {2020},
  doi       = {10.1007/978-3-030-54249-8_32},
  note      = {Series Title: Lecture Notes in Computer Science},
  pages     = {402--418},
  file      = {Haydon and Sobociński - 2020 - Compositional Diagrammatic First-Order Logic.pdf:/home/pablo/Zotero/storage/56GM7HEW/Haydon and Sobociński - 2020 - Compositional Diagrammatic First-Order Logic.pdf:application/pdf}
}

@book{oostra_graficos_2010,
  series    = {Cuadernos de {Sistemática} {Peirceana}},
  title     = {Los gráficos {Alfa} de {Peirce} aplicados a la lógica intuicionista},
  language  = {es},
  number    = {2},
  publisher = {Centro de Sistemática Peirceana},
  author    = {Oostra, Arnold},
  year      = {2010},
  file      = {Ham - Universidad Nacional de Colombia.pdf:/home/pablo/Zotero/storage/EJ6ZMCD2/Ham - Universidad Nacional de Colombia.pdf:application/pdf}
}

@article{ullrich_beyond_2022,
  title      = {Beyond {Notations}: {Hygienic} {Macro} {Expansion} for {Theorem} {Proving} {Languages}},
  shorttitle = {Beyond {Notations}},
  url        = {http://arxiv.org/abs/2001.10490},
  abstract   = {In interactive theorem provers (ITPs), extensible syntax is not only crucial to lower the cognitive burden of manipulating complex mathematical objects, but plays a critical role in developing reusable abstractions in libraries. Most ITPs support such extensions in the form of restrictive "syntax sugar" substitutions and other ad hoc mechanisms, which are too rudimentary to support many desirable abstractions. As a result, libraries are littered with unnecessary redundancy. Tactic languages in these systems are plagued by a seemingly unrelated issue: accidental name capture, which often produces unexpected and counterintuitive behavior. We take ideas from the Scheme family of programming languages and solve these two problems simultaneously by proposing a novel hygienic macro system custom-built for ITPs. We further describe how our approach can be extended to cover type-directed macro expansion resulting in a single, uniform system offering multiple abstraction levels that range from supporting simplest syntax sugars to elaboration of formerly baked-in syntax. We have implemented our new macro system and integrated it into the new version of the Lean theorem prover, Lean 4. Despite its expressivity, the macro system is simple enough that it can easily be integrated into other systems.},
  urldate    = {2022-04-14},
  journal    = {arXiv:2001.10490 [cs]},
  author     = {Ullrich, Sebastian and de Moura, Leonardo},
  month      = apr,
  year       = {2022},
  note       = {arXiv: 2001.10490},
  keywords   = {Computer Science - Programming Languages},
  file       = {arXiv Fulltext PDF:/home/pablo/Zotero/storage/SLC8GUVW/Ullrich and de Moura - 2022 - Beyond Notations Hygienic Macro Expansion for The.pdf:application/pdf;arXiv.org Snapshot:/home/pablo/Zotero/storage/H5CWPE8V/2001.html:text/html}
}

@article{geuvers_proof_2009,
  title      = {Proof assistants: {History}, ideas and future},
  volume     = {34},
  issn       = {0256-2499, 0973-7677},
  shorttitle = {Proof assistants},
  url        = {http://link.springer.com/10.1007/s12046-009-0001-5},
  doi        = {10.1007/s12046-009-0001-5},
  abstract   = {In this paper I will discuss the fundamental ideas behind proof assistants: What are they and what is a proof anyway? I give a short history of the main ideas, emphasizing the way they ensure the correctness of the mathematics formalized. I will also brieﬂy discuss the places where proof assistants are used and how we envision their extended use in the future. While being an introduction into the world of proof assistants and the main issues behind them, this paper is also a position paper that pushes the further use of proof assistants. We believe that these systems will become the future of mathematics, where deﬁnitions, statements, computations and proofs are all available in a computerized form. An important application is and will be in computer supported modelling and veriﬁcation of systems. But there is still a long road ahead and I will indicate what we believe is needed for the further proliferation of proof assistants.},
  language   = {en},
  number     = {1},
  urldate    = {2023-04-03},
  journal    = {Sadhana},
  author     = {Geuvers, H.},
  month      = feb,
  year       = {2009},
  pages      = {3--25},
  file       = {Geuvers - 2009 - Proof assistants History, ideas and future.pdf:/home/pablo/Zotero/storage/WF23KXE9/Geuvers - 2009 - Proof assistants History, ideas and future.pdf:application/pdf}
}


@article{dyckhoff_contraction-free_1992,
  title   = {Contraction-{Free} {Sequent} {Calculi} for {Intuitionistic} {Logic}},
  volume  = {57},
  doi     = {10.2307/2275431},
  number  = {3},
  journal = {Journal of Symbolic Logic},
  author  = {Dyckhoff, Roy},
  year    = {1992},
  note    = {Publisher: Association for Symbolic Logic},
  pages   = {795--807},
  file    = {dyckhoff92.pdf:/home/pablo/Zotero/storage/ETGKSVPL/dyckhoff92.pdf:application/pdf;Snapshot:/home/pablo/Zotero/storage/HKT99BB4/DYCCSC.html:text/html}
}


@inproceedings{omar-filling-2021,
  address   = {New York, NY, USA},
  series    = {{PLDI} 2021},
  title     = {Filling typed holes with live {GUIs}},
  isbn      = {978-1-4503-8391-2},
  url       = {https://doi.org/10.1145/3453483.3454059},
  doi       = {10.1145/3453483.3454059},
  abstract  = {Text editing is powerful, but some types of expressions are more naturally represented and manipulated graphically. Examples include expressions that compute colors, music, animations, tabular data, plots, diagrams, and other domain-specific data structures. This paper introduces live literals, or livelits, which allow clients to fill holes of types like these by directly manipulating a user-defined GUI embedded persistently into code. Uniquely, livelits are compositional: a livelit GUI can itself embed spliced expressions, which are typed, lexically scoped, and can in turn embed other livelits. Livelits are also uniquely live: a livelit can provide continuous feedback about the run-time implications of the client’s choices even when splices mention bound variables, because the system continuously gathers closures associated with the hole that the livelit is filling. We integrate livelits into Hazel, a live hole-driven programming environment, and describe case studies that exercise these novel capabilities. We then define a simply typed livelit calculus, which specifies how livelits operate as live graphical macros. The metatheory of macro expansion has been mechanized in Agda.},
  urldate   = {2021-12-10},
  booktitle = {Proceedings of the 42nd {ACM} {SIGPLAN} {International} {Conference} on {Programming} {Language} {Design} and {Implementation}},
  publisher = {Association for Computing Machinery},
  author    = {Omar, Cyrus and Moon, David and Blinn, Andrew and Voysey, Ian and Collins, Nick and Chugh, Ravi},
  month     = jun,
  year      = {2021},
  keywords  = {GUIs, live programming, macros, typed holes},
  pages     = {511--525},
  file      = {Full Text PDF:C\:\\Users\\pablo\\Zotero\\storage\\CL9UM2WP\\Omar et al. - 2021 - Filling typed holes with live GUIs.pdf:application/pdf}
}

@inproceedings{isar,
  author    = {Tobias Nipkow},
  editor    = {Herman Geuvers and
               Freek Wiedijk},
  title     = {Structured Proofs in Isar/HOL},
  booktitle = {Types for Proofs and Programs, Second International Workshop, {TYPES}
               2002, Berg en Dal, The Netherlands, April 24-28, 2002, Selected Papers},
  series    = {Lecture Notes in Computer Science},
  volume    = {2646},
  pages     = {259--278},
  publisher = {Springer},
  year      = {2002},
  url       = {https://doi.org/10.1007/3-540-39185-1\_15},
  doi       = {10.1007/3-540-39185-1\_15},
  timestamp = {Tue, 14 May 2019 10:00:42 +0200},
  biburl    = {https://dblp.org/rec/conf/types/Nipkow02.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{clickcollect,
  title       = {{Click and coLLecT An Interactive Linear Logic Prover}},
  author      = {Callies, Etienne and Laurent, Olivier},
  url         = {https://hal-lirmm.ccsd.cnrs.fr/lirmm-03271501},
  booktitle   = {{5th International Workshop on Trends in Linear Logic and Applications (TLLA 2021)}},
  address     = {Rome (virtual), Italy},
  year        = {2021},
  month       = Jun,
  pdf         = {https://hal-lirmm.ccsd.cnrs.fr/lirmm-03271501/file/TLLA_2021_paper_4.pdf},
  hal_id      = {lirmm-03271501},
  hal_version = {v1}
}


@inproceedings{edukera,
  title     = {Pr{\'e}sentation de la plateforme edukera},
  author    = {Rognier, Benoit and Duhamel, Guillaume},
  booktitle = {Vingt-septi{\`e}mes Journ{\'e}es Francophones des Langages Applicatifs (JFLA 2016)},
  year      = {2016}
}
@techreport{SSR,
  title       = {{A Small Scale Reflection Extension for the Coq system}},
  author      = {Gonthier, Georges and Mahboubi, Assia and Tassi, Enrico},
  url         = {https://hal.inria.fr/inria-00258384},
  type        = {Research Report},
  number      = {RR-6455},
  institution = {{Inria Saclay Ile de France}},
  year        = {2016},
  pdf         = {https://hal.inria.fr/inria-00258384v17/file/main.pdf},
  hal_id      = {inria-00258384},
  hal_version = {v17}
}

@article{andreoli1992,
  title        = {Logic Programming with Focusing Proofs in Linear Logic},
  volume       = {2},
  issn         = {0955-792X, 1465-363X},
  url          = {https://academic.oup.com/logcom/article-lookup/doi/10.1093/logcom/2.3.297},
  abstract     = {The deep symmetry of Linear Logic 18] makes it suitable for providing abstract models of computation, free from implementation details which are, by nature, oriented and non symmetrical. I propose here one such model, in the area of Logic Programming, where the basic computational principle is Computation = Proof search. Proofs considered here are those of the Gentzen style sequent calculus for Linear Logic. However, proofs in this system may be redundant, in that two proofs can be syntactically di erent although identical up to some irrelevant reordering or simpli cation of the applications of the inference rules. This leads to an untractable proof search where the search procedure is forced to make costly choices which turn out to be irrelevant. To overcome this problem, a subclass of proofs, called the {\textbackslash}focusing" proofs, which is both complete (any derivable formula in Linear Logic has a focusing proof) and tractable (many irrelevant choices in the search are eliminated when aimed at focusing proofs) is identi ed. The main constraint underlying the speci cation of focusing proofs has been to preserve the symmetry of Linear Logic, which is its most salient feature. In particular, dual connectives have dual properties with respect to focusing proofs.},
  pages        = {297--347},
  number       = {3},
  journal      = {Journal of Logic and Computation},
  shortjournal = {J Logic Computation},
  author       = {Andreoli, Jean-Marc},
  urldate      = {2020-06-09},
  date         = {1992},
  year         = {1992},
  langid       = {english},
  file         = {Andreoli - 1992 - Logic Programming with Focusing Proofs in Linear L.pdf:/home/pablo/Zotero/storage/FNMAD6M2/Andreoli - 1992 - Logic Programming with Focusing Proofs in Linear L.pdf:application/pdf}
}

@article{Miller1987ACR,
  title   = {A compact representation of proofs},
  author  = {Dale A. Miller},
  journal = {Studia Logica},
  year    = {1987},
  volume  = {46},
  pages   = {347-370}
}
@book{ISOSBook,
  author       = {Di Cosmo, Roberto},
  title        = {Isomorphisms of types: from $\lambda$-calculus to  information retrieval
                  and language design},
  publisher    = {Birkhauser},
  year         = {1995},
  x-topic      = {typeis},
  dmi-category = {livre},
  url          = {http://www.ens.fr/users/dicosmo/Publications/ISObook.html},
  html         = {http://www.ens.fr/users/dicosmo/Publications/ISObook.html},
  htmlurl      = {\htmladdnormallink{Contents and Overview}{http://www.ens.fr/users/dicosmo/Publications/ISObook.html}},
  note         = {ISBN-0-8176-3763-X},
  abstract-url = {http://www.dicosmo.org/Publications/Abstracts.html#ISOSBook}
}

@unpublished{ChaudhuriTLLA,
  title  = {Interactive Proof Building with Direct Manipulation for Linear Logic (and Cousins)},
  author = {Chaudhuri, Kaustuv},
  note   = {Invited Talk at the {\em Linearity \& TLLA} workshop},
  year   = {2020}
}

@article{strasburger-problem-2019,
  title        = {The problem of proof identity, and why computer scientists should care about Hilbert's 24th problem},
  volume       = {377},
  issn         = {1364-503X, 1471-2962},
  url          = {https://royalsocietypublishing.org/doi/10.1098/rsta.2018.0038},
  doi          = {10.1098/rsta.2018.0038},
  pages        = {20180038},
  number       = {2140},
  journal      = {Philosophical Transactions of the Royal Society A: Mathematical, Physical and Engineering Sciences},
  shortjournal = {Phil. Trans. R. Soc. A.},
  author       = {Straßburger, Lutz},
  urldate      = {2020-08-08},
  date         = {2019-03-11},
  year         = {2019},
  langid       = {english},
  file         = {Straßburger - 2019 - The problem of proof identity, and why computer sc.pdf:/home/pablo/Zotero/storage/5K3BB6AB/Straßburger - 2019 - The problem of proof identity, and why computer sc.pdf:application/pdf}
}

@incollection{blanchette-visual-2016,
  location  = {Cham},
  title     = {Visual Theorem Proving with the Incredible Proof Machine},
  volume    = {9807},
  isbn      = {978-3-319-43143-7 978-3-319-43144-4},
  url       = {http://link.springer.com/10.1007/978-3-319-43144-4_8},
  abstract  = {The Incredible Proof Machine is an easy and fun to use program to conduct formal proofs. It employs a novel, intuitive proof representation based on port graphs, which is akin to, but even more natural than, natural deduction. In particular, we describe a way to determine the scope of local assumptions and variables implicitly. Our practical classroom experience backs these claims.},
  pages     = {123--139},
  booktitle = {Interactive Theorem Proving},
  publisher = {Springer International Publishing},
  author    = {Breitner, Joachim},
  editor    = {Blanchette, Jasmin Christian and Merz, Stephan},
  urldate   = {2020-08-09},
  date      = {2016},
  year      = {2016},
  langid    = {english},
  doi       = {10.1007/978-3-319-43144-4_8},
  note      = {Series Title: Lecture Notes in Computer Science},
  file      = {Breitner - 2016 - Visual Theorem Proving with the Incredible Proof M.pdf:/home/pablo/Zotero/storage/VNDSE6S8/Breitner - 2016 - Visual Theorem Proving with the Incredible Proof M.pdf:application/pdf}
}

@article{liang-focusing-2009,
  title        = {Focusing and polarization in linear, intuitionistic, and classical logics},
  volume       = {410},
  issn         = {03043975},
  url          = {https://linkinghub.elsevier.com/retrieve/pii/S0304397509005301},
  doi          = {10.1016/j.tcs.2009.07.041},
  abstract     = {A focused proof system provides a normal form to cut-free proofs in which the application of invertible and non-invertible inference rules is structured. Within linear logic, the focused proof system of Andreoli provides an elegant and comprehensive normal form for cut-free proofs. Within intuitionistic and classical logics, there are various diﬀerent proof systems in the literature that exhibit focusing behavior. These focused proof systems have been applied to both the proof search and the proof normalization approaches to computation. We present a new, focused proof system for intuitionistic logic, called {LJF}, and show how other intuitionistic proof systems can be mapped into the new system by inserting logical connectives that prematurely stop focusing. We also use {LJF} to design a focused proof system {LKF} for classical logic. Our approach to the design and analysis of these systems is based on the completeness of focusing in linear logic and on the notion of polarity that appears in Girard’s {LC} and {LU} proof systems.},
  pages        = {4747--4768},
  number       = {46},
  journal      = {Theoretical Computer Science},
  shortjournal = {Theoretical Computer Science},
  author       = {Liang, Chuck and Miller, Dale},
  urldate      = {2020-08-12},
  date         = {2009-11},
  year         = {2009},
  langid       = {english},
  file         = {Liang et Miller - 2009 - Focusing and polarization in linear, intuitionisti.pdf:/home/pablo/Zotero/storage/HW7RWGCC/Liang et Miller - 2009 - Focusing and polarization in linear, intuitionisti.pdf:application/pdf}
}

@article{Montanari,
  author     = {Martelli, Alberto and Montanari, Ugo},
  title      = {An Efficient Unification Algorithm},
  year       = {1982},
  issue_date = {April 1982},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {4},
  number     = {2},
  issn       = {0164-0925},
  url        = {https://doi.org/10.1145/357162.357169},
  doi        = {10.1145/357162.357169},
  journal    = {ACM Trans. Program. Lang. Syst.},
  month      = apr,
  pages      = {258–282},
  numpages   = {25}
}

@techreport{Guglielmi1999ACO,
  title       = {A Calculus of Order and Interaction},
  author      = {Alessio Guglielmi},
  year        = {1999},
  institution = {Technische Universität Dresden},
  url         = {https://www.researchgate.net/publication/2807151_A_Calculus_of_Order_and_Interaction}
}

@article{girard-linear-1987,
  title    = {Linear logic},
  volume   = {50},
  issn     = {0304-3975},
  url      = {http://www.sciencedirect.com/science/article/pii/0304397587900454},
  doi      = {https://doi.org/10.1016/0304-3975(87)90045-4},
  abstract = {The familiar connective of negation is broken into two operations: linear negation which is the purely negative part of negation and the modality “of course” which has the meaning of a reaffirmation. Following this basic discovery, a completely new approach to the whole area between constructive logics and programmation is initiated.},
  pages    = {1 -- 101},
  number   = {1},
  journal  = {Theoretical Computer Science},
  author   = {Girard, Jean-Yves},
  date     = {1987},
  year     = {1987}
}

@article{doi:10.1098/rsta.1984.0067,
  author   = {Milner, Robin},
  title    = {The use of machines to assist in rigorous proof},
  journal  = {Philosophical Transactions of the Royal Society of London. Series A, Mathematical and Physical Sciences},
  volume   = {312},
  number   = {1522},
  pages    = {411-422},
  year     = {1984},
  doi      = {10.1098/rsta.1984.0067},
  url      = {https://royalsocietypublishing.org/doi/abs/10.1098/rsta.1984.0067},
  eprint   = {https://royalsocietypublishing.org/doi/pdf/10.1098/rsta.1984.0067},
  abstract = { A methodology for computer assisted proof is presented with an example. A central ingredient in the method is the presentation of tactics (or strategies) in an algorithmic metalanguage. Further, the same language is also used to express combinators, by which simple elementary tactics - which often correspond to the inference rules of the logic employed - are combined into more complex tactics, which may even be strategies complete for a class of problems. However, the emphasis is not upon completeness but upon providing a metalogical framework within which a user may express his insight into proof methods and may delegate routine (but error-prone) work to the computer. This method of tactic composition is presented at the start of the paper in the form of an elementary theory of goal-seeking. A second ingredient of the methodology is the stratification of machine-assisted proof by an ancestry graph of applied theories, and the example illustrates this stratification. In the final section, some recent developments and applications of the method are cited. }
}

@inproceedings{DBLP:conf/cade/Chaudhuri21,
  author    = {Kaustuv Chaudhuri},
  editor    = {Andr{\'{e}} Platzer and
               Geoff Sutcliffe},
  title     = {Subformula Linking for Intuitionistic Logic with Application to Type
               Theory},
  booktitle = {Automated Deduction - {CADE} 28 - 28th International Conference on
               Automated Deduction, Virtual Event, July 12-15, 2021, Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {12699},
  pages     = {200--216},
  publisher = {Springer},
  year      = {2021},
  url       = {https://doi.org/10.1007/978-3-030-79876-5\_12},
  doi       = {10.1007/978-3-030-79876-5\_12},
  timestamp = {Sun, 25 Jul 2021 11:51:37 +0200},
  biburl    = {https://dblp.org/rec/conf/cade/Chaudhuri21.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@techreport{amerkad-mathematics-2001,
  title       = {Mathematics and {Proof} {Presentation} in {Pcoq}},
  url         = {https://hal.inria.fr/inria-00072274},
  number      = {RR-4313},
  urldate     = {2021-12-08},
  institution = {INRIA},
  author      = {Amerkad, Ahmed and Bertot, Yves and Pottier, Loïc and Rideau, Laurence},
  month       = nov,
  year        = {2001},
  keywords    = {INTERFACE, MATHEMATICAL PRINTING, PROOF, PROOF ASSISTANT}
}


@article{robinson-formalizing-1993,
  title    = {Formalizing a {Hierarchical} {Structure} of {Practical} {Mathematical} {Reasoning}},
  volume   = {3},
  issn     = {0955-792X},
  url      = {https://doi.org/10.1093/logcom/3.1.47},
  doi      = {10.1093/logcom/3.1.47},
  abstract = {Traditionally, mathematical logic has been content with ‘in principle’ formalizations of deductive inference, which place little emphasis on the description of practical reasoning. Requirements for formal descriptions of practical inference methods are now emerging however. For example, interactive reasoning systems are needed for verification of computer systems, and should support practically convenient reasoning techniques as strongly as possible. This paper describes a proof paradigm which formalises a hierarchical, problem-reduction style of reasoning which is widely useful in practical reasoning. It is a goal directed paradigm, which gives a central role to equivalence transformations. A hierarchy of subgoals can co-exist at a single point in the proof, and these subgoals may be of arbitrary type. The approach allows good access to contextual information when transforming subgoals, and can be applied to a variety of logics.},
  number   = {1},
  urldate  = {2021-12-08},
  journal  = {Journal of Logic and Computation},
  author   = {Robinson, Peter J. and Staples, John},
  month    = feb,
  year     = {1993},
  pages    = {47--61},
  file     = {Full Text PDF:C\:\\Users\\pablo\\Zotero\\storage\\3UYZT2DV\\ROBINSON et STAPLES - 1993 - Formalizing a Hierarchical Structure of Practical .pdf:application/pdf;Snapshot:C\:\\Users\\pablo\\Zotero\\storage\\IS8HFMKR\\1043242.html:text/html}
}

@inproceedings{grundy-window-1991,
  title     = {Window {Inference} {In} {The} {HOL} {System}},
  doi       = {10.1109/HOL.1991.596285},
  booktitle = {1991 {International} {Workshop} on the {HOL} {Theorem} {Proving} {System} and {Its} {Applications}},
  author    = {Grundy, J.},
  month     = aug,
  year      = {1991},
  keywords  = {Australia, Calculus, Laboratories, Packaging},
  pages     = {177--189},
  file      = {IEEE Xplore Full Text PDF:C\:\\Users\\pablo\\Zotero\\storage\\CP5QSJL2\\Grundy - 1991 - Window Inference In The HOL System.pdf:application/pdf;IEEE Xplore Abstract Record:C\:\\Users\\pablo\\Zotero\\storage\\SH78C3NX\\596285.html:text/html}
}


@incollection{ahrendt-using-2016,
  address   = {Cham},
  title     = {Using the {KeY} {Prover}},
  volume    = {10001},
  isbn      = {978-3-319-49811-9 978-3-319-49812-6},
  url       = {http://link.springer.com/10.1007/978-3-319-49812-6_15},
  language  = {en},
  urldate   = {2021-11-23},
  booktitle = {Deductive {Software} {Verification} – {The} {KeY} {Book}},
  publisher = {Springer International Publishing},
  author    = {Ahrendt, Wolfgang and Grebing, Sarah},
  editor    = {Ahrendt, Wolfgang and Beckert, Bernhard and Bubel, Richard and Hähnle, Reiner and Schmitt, Peter H. and Ulbrich, Mattias},
  year      = {2016},
  doi       = {10.1007/978-3-319-49812-6_15},
  note      = {Series Title: Lecture Notes in Computer Science},
  pages     = {495--539},
  file      = {Ahrendt et Grebing - 2016 - Using the KeY Prover.pdf:C\:\\Users\\pablo\\Zotero\\storage\\CY87PBHF\\Ahrendt et Grebing - 2016 - Using the KeY Prover.pdf:application/pdf}
}

@incollection{goos-tas-2000,
  address   = {Berlin, Heidelberg},
  title     = {{TAS} — {A} {Generic} {Window} {Inference} {System}},
  volume    = {1869},
  isbn      = {978-3-540-67863-2 978-3-540-44659-0},
  url       = {http://link.springer.com/10.1007/3-540-44659-1_25},
  abstract  = {This paper presents work on technology for transformational proof and program development, as used by window inference calculi and transformation systems. The calculi are characterised by a certain class of theorems in the underlying logic. Our transformation system TAS compiles these rules to concrete deduction support, complete with a graphical user interface with command-language-free user interaction by gestures like drag\&drop and proof-by-pointing, and a development management for transformational proofs. It is generic in the sense that it is completely independent of the particular window inference or transformational calculus, and can be instantiated to many diﬀerent ones; three such instantiations are presented in the paper.},
  language  = {en},
  urldate   = {2021-12-08},
  booktitle = {Theorem {Proving} in {Higher} {Order} {Logics}},
  publisher = {Springer Berlin Heidelberg},
  author    = {Lüth, Christoph and Wolff, Burkhart},
  editor    = {Goos, Gerhard and Hartmanis, Juris and van Leeuwen, Jan and Aagaard, Mark and Harrison, John},
  year      = {2000},
  doi       = {10.1007/3-540-44659-1_25},
  note      = {Series Title: Lecture Notes in Computer Science},
  pages     = {406--423},
  file      = {Lüth et Wolff - 2000 - TAS — A Generic Window Inference System.pdf:C\:\\Users\\pablo\\Zotero\\storage\\2BTD79Y6\\Lüth et Wolff - 2000 - TAS — A Generic Window Inference System.pdf:application/pdf}
}

@inproceedings{grundy-window-1992,
  address   = {London},
  title     = {A {Window} {Inference} {Tool} for {Refinement}},
  isbn      = {978-1-4471-3550-0},
  abstract  = {This paper proposes a refinement tool based on a style of reasoning called window inference. Window inference allows a user to transform one expression into another while maintaining some specified relationship between them. A program refinement tool is described which combines window inference with an approach to refinement that treats programs as predicates.},
  booktitle = {5th {Refinement} {Workshop}},
  publisher = {Springer London},
  author    = {Grundy, Jim},
  editor    = {Jones, Cliff B. and Shaw, Roger C. and Denvir, Tim},
  year      = {1992},
  pages     = {230--254}
}

@inproceedings{langbacka-tkwinhol-1995,
  address    = {Berlin, Heidelberg},
  series     = {Lecture {Notes} in {Computer} {Science}},
  title      = {{TkWinHOL}: {A} tool for {Window} {Inference} in {HOL}},
  isbn       = {978-3-540-44784-9},
  shorttitle = {{TkWinHOL}},
  doi        = {10.1007/3-540-60275-5_69},
  abstract   = {Window inference is a method for contextual rewriting and refinement, supported by the HOL Window Inference Library. This paper describes a user-friendly interface for window inference. The interface permits the user to select subexpressions by pointing and clicking and to select transformations from menus. The correctness of each transformation step is proved automatically by the HOL system. The interface can be tailored to particular user-defined theories. One such extension, for program refinement, is described.},
  language   = {en},
  booktitle  = {Higher {Order} {Logic} {Theorem} {Proving} and {Its} {Applications}},
  publisher  = {Springer},
  author     = {Långbacka, Thomas and Rukšėnas, Rimvydas and von Wright, Joakim},
  editor     = {Thomas Schubert, E. and Windley, Philip J. and Alves-Foss, James},
  year       = {1995},
  keywords   = {Associative Operator, High Order Logic, Predicate Transformer, Program Variable, Proof Obligation},
  pages      = {245--260}
}

@inproceedings{elliott-tangible,
  author    = {Elliott, Conal M.},
  title     = {Tangible Functional Programming},
  year      = {2007},
  isbn      = {9781595938152},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/1291151.1291163},
  doi       = {10.1145/1291151.1291163},
  abstract  = {We present a user-friendly approach to unifying program creation and execution, based on a notion of "tangible values" (TVs), which are visual and interactive manifestations of pure values, including functions. Programming happens by gestural composition of TVs. Our goal is to give end-users the ability to create parameterized, composable content without imposing the usual abstract and linguistic working style of programmers. We hope that such a system will put the essence of programming into the hands of many more people, and in particular people with artistic/visual creative style.In realizing this vision, we develop algebras for visual presentation and for "deep" function application, where function and argument may both be nested within a structure of tuples, functions, etc. Composition gestures are translated into chains of combinators that act simultaneously on statically typed values and their visualizations.},
  booktitle = {Proceedings of the 12th ACM SIGPLAN International Conference on Functional Programming},
  pages     = {59–70},
  numpages  = {12},
  keywords  = {interactive programming, end-user programming, gestural composition, arrows, interactive visualization, combinator libraries},
  location  = {Freiburg, Germany},
  series    = {ICFP '07}
}

@article{1674698,
  author  = { {Andrews}},
  journal = {IEEE Transactions on Computers},
  title   = {Refutations by Matings},
  year    = {1976},
  volume  = {C-25},
  number  = {8},
  pages   = {801-807}
}

@online{gg2,
  author = {GeoGebra GmbH},
  title  = {{G}eo{G}ebra Geometry},
  note   = {\url{http://www.geogebra.org/geometry}},
  year   = {2023}
}

@article{dragalin_mathematical_1990,
  title   = {Mathematical {Intuitionism}. {Introduction} to {Proof} {Theory}},
  volume  = {55},
  number  = {3},
  journal = {Journal of Symbolic Logic},
  author  = {Dragalin, A. G. and Mendelson, E.},
  year    = {1990},
  note    = {Publisher: Association for Symbolic Logic},
  pages   = {1308--1309}
}

@article{Hughes_2006,
  title     = {Proofs without syntax},
  volume    = {164},
  issn      = {0003-486X},
  url       = {http://dx.doi.org/10.4007/ANNALS.2006.164.1065},
  doi       = {10.4007/annals.2006.164.1065},
  number    = {3},
  journal   = {Annals of Mathematics},
  publisher = {Annals of Mathematics},
  author    = {Hughes, Dominic},
  year      = {2006},
  month     = {Nov},
  pages     = {1065–1076}
}

@book{negri_structural_2001,
  edition   = {1},
  title     = {Structural {Proof} {Theory}},
  isbn      = {978-0-521-79307-0 978-0-521-06842-0 978-0-511-52734-0},
  url       = {https://www.cambridge.org/core/product/identifier/9780511527340/type/book},
  abstract  = {Structural proof theory is a branch of logic that studies the general structure and properties of logical and mathematical proofs. This book is both a concise introduction to the central results and methods of structural proof theory, and a work of research that will be of interest to specialists. The book is designed to be used by students of philosophy, mathematics and computer science. The book contains a wealth of results on proof-theoretical systems, including extensions of such systems from logic to mathematics, and on the connection between the two main forms of structural proof theory - natural deduction and sequent calculus. The authors emphasize the computational content of logical results. A special feature of the volume is a computerized system for developing proofs interactively, downloadable from the web and regularly updated.},
  urldate   = {2023-06-08},
  publisher = {Cambridge University Press},
  author    = {Negri, Sara and von Plato, Jan and Ranta, Aarne},
  month     = jun,
  year      = {2001},
  doi       = {10.1017/CBO9780511527340},
  file      = {Professor Sara Negri, Jan von Plato, Aarne Ranta-Structural proof theory-CUP (2001).djvu:/home/pablo/Zotero/storage/5CQGVNRI/Professor Sara Negri, Jan von Plato, Aarne Ranta-Structural proof theory-CUP (2001).djvu:image/vnd.djvu}
}

@book{girard:hal-01322183,
  title       = {{The blind spot}},
  author      = {Girard, Jean-Yves},
  url         = {https://hal.science/hal-01322183},
  publisher   = {{European Mathematical Society (EMS)}},
  pages       = {550 pages},
  year        = {2011},
  month       = Sep,
  doi         = {10.4171/088},
  keywords    = {logic ;  proof-theory ;  incompleteness ;  sequent calculus ;  natural deduction ;  lambda-calculus ;  Curry--Howard isomorphism ;  system F ;  coherent spaces ;  linear logic ;  proof-nets ;  ludics ;  implicit complexity ;  geometry of interaction},
  hal_id      = {hal-01322183},
  hal_version = {v1}
}

@manual{coqman-genrew,
  author  = {Matthieu Sozeau},
  title   = {Coq's Reference Manual},
  url     = {https://coq.inria.fr/refman/addendum/generalized-rewriting.html},
  chapter = {Generalized Rewriting}
}

@article{bartzia_proof_nodate,
  title    = {Proof assistants for undergraduate mathematics education: elements of an a priori analysis},
  abstract = {This paper presents an a priori analysis of the use of six different interactive proof assistants for education, based on the resolution of a typical undergraduate exercise on abstract functions. It proposes to analyze these tools according to three main categories of aspects: language and interaction mode, automation and user assistance, and proof structure and visualization. We argue that this analysis may help formulate and clarify further research questions on the possible impact of such tools on the development of reasoning and proving skills.},
  language = {en},
  author   = {Bartzia, Evmorfia-Iro and Beffara, Emmanuel and Meyer, Antoine},
  file     = {Bartzia et al. - Proof assistants for undergraduate mathematics edu.pdf:/home/pablo/Zotero/storage/DNWNFYES/Bartzia et al. - Proof assistants for undergraduate mathematics edu.pdf:application/pdf}
}

@manual{Actema:link,
  title  = {The Actema prototype, standalone version},
  author = {Donato, Pablo and Najjar, Sébastien and Strub, Pierre-Yves and Werner, Benjamin},
  note   = {\url{https://actema.xyz}},
  year   = {2021}
}

@misc{Vuejs,
  author  = {{The Vue.js team}},
  title   = {Vue.js},
  url     = {https://v2.vuejs.org/v2/guide/},
  version = {2},
  year    = {2022},
  urldate = {2023-08-03}
}

@misc{Electron,
  author  = {{OpenJS Foundation and Electron contributors}},
  title   = {What is Electron?},
  url     = {https://www.electronjs.org/docs/latest/},
  version = {19},
  year    = {2022},
  urldate = {2023-08-05}
}

@misc{ElectronProcess,
  author  = {{OpenJS Foundation and Electron contributors}},
  title   = {Process Model},
  url     = {https://www.electronjs.org/docs/latest/tutorial/process-model},
  version = {19},
  year    = {2022},
  urldate = {2023-08-05}
}

@misc{NodeJS,
  author  = {{OpenJS Foundation and Node.js contributors}},
  title   = {Node.js HTTP library documentation},
  url     = {https://nodejs.org/docs/latest-v14.x/api/http.html},
  version = {14},
  year    = {2020},
  urldate = {2023-08-05}
}

@misc{CoqCore,
  author  = {{The Coq Development Team}},
  title   = {coq-core OCaml API documentation},
  url     = {https://coq.github.io/doc/v8.15/api/coq-core/index.html},
  version = {8.15},
  year    = {2022},
  urldate = {2023-08-05}
}

@misc{CoqELPI,
  author  = {{Enrico Tassi}},
  title   = {Coq-Elpi GitHub repository},
  url     = {https://github.com/LPCIC/coq-elpi},
  year    = {2023},
  urldate = {2023-08-05}
}

@article{MetaCoq,
  title       = {{The MetaCoq Project}},
  author      = {Sozeau, Matthieu and Anand, Abhishek and Boulier, Simon and Cohen, Cyril and Forster, Yannick and Kunze, Fabian and Malecha, Gregory and Tabareau, Nicolas and Winterhalter, Th{\'e}o},
  url         = {https://inria.hal.science/hal-02167423},
  journal     = {{Journal of Automated Reasoning}},
  publisher   = {{Springer Verlag}},
  year        = {2020},
  month       = Feb,
  doi         = {10.1007/s10817-019-09540-0},
  pdf         = {https://inria.hal.science/hal-02167423/file/The_MetaCoq_Project.pdf},
  hal_id      = {hal-02167423},
  hal_version = {v1}
}


@article{vouillon_bytecode_2014,
  title      = {From bytecode to {JavaScript}: the {Js}\_of\_ocaml compiler},
  volume     = {44},
  issn       = {00380644},
  shorttitle = {From bytecode to {JavaScript}},
  url        = {https://onlinelibrary.wiley.com/doi/10.1002/spe.2187},
  doi        = {10.1002/spe.2187},
  abstract   = {We present the design and implementation of a compiler from OCaml bytecode to Javascript. We believe that taking bytecode as input instead of a high-level language is a sensible choice. Virtual machines provide a very stable API. Such a compiler is thus easy to maintain. It is also convenient to use: it can just be added to an existing installation of the development tools. Already compiled libraries can be used directly, with no need to reinstall anything. Finally, some virtual machines are the target of several languages. A bytecode to Javascript compiler would make it possible to retarget all these languages to Web browsers at once.},
  language   = {en},
  number     = {8},
  urldate    = {2023-01-06},
  journal    = {Software: Practice and Experience},
  author     = {Vouillon, Jérôme and Balat, Vincent},
  month      = aug,
  year       = {2014},
  pages      = {951--972},
  file       = {Vouillon and Balat - 2014 - From bytecode to JavaScript the Js_of_ocaml compi.pdf:/home/pablo/Zotero/storage/9MDKBXFI/Vouillon and Balat - 2014 - From bytecode to JavaScript the Js_of_ocaml compi.pdf:application/pdf}
}

@unpublished{gallegoarias:hal_01384408,
  title       = {{SerAPI: Machine-Friendly, Data-Centric Serialization for COQ}},
  author      = {Gallego Arias, Emilio Jes{\'u}s},
  url         = {https://hal-mines-paristech.archives-ouvertes.fr/hal-01384408},
  note        = {working paper or preprint},
  year        = {2016},
  month       = Oct,
  keywords    = {serialization ; interactive protocols ; user interfaces ; program verification ; theorem prover implementation},
  pdf         = {https://hal-mines-paristech.archives-ouvertes.fr/hal-01384408/file/serapi.pdf},
  hal_id      = {hal-01384408},
  hal_version = {v1}
}

@article{Gallego_Arias_2017,
  doi       = {10.4204/eptcs.239.2},
  url       = {https://doi.org/10.4204%2Feptcs.239.2},
  year      = 2017,
  month     = {jan},
  publisher = {Open Publishing Association},
  volume    = {239},
  pages     = {15--27},
  author    = {Emilio Jes\'{u}s Gallego Arias and Beno{\^{\i}}t Pin and Pierre Jouvelot},
  title     = {{jsCoq}: Towards Hybrid Theorem Proving Interfaces},
  journal   = {Electronic Proceedings in Theoretical Computer Science}
}

@misc{enwiki:1153944336,
  author       = {{Wikipedia contributors}},
  title        = {Sequence diagram --- {Wikipedia}{,} The Free Encyclopedia},
  year         = {2023},
  howpublished = {\url{https://en.wikipedia.org/w/index.php?title=Sequence_diagram&oldid=1153944336}},
  urldate      = {2023-07-05}
}

@misc{ATD,
  author       = {{Martin Jambon}},
  title        = {The ATD Language},
  year         = {2023},
  howpublished = {\url{https://atd.readthedocs.io/en/latest/atd-language.html}},
  urldate      = {2023-07-05}
}

@misc{atdgen,
  author       = {{Martin Jambon}},
  title        = {OCaml support -- atdgen},
  year         = {2023},
  howpublished = {\url{https://atd.readthedocs.io/en/latest/atdgen.html}},
  urldate      = {2023-07-05}
}

@inproceedings{delahaye_tactic_2000,
  address   = {Berlin, Heidelberg},
  series    = {Lecture {Notes} in {Artificial} {Intelligence}},
  title     = {A {Tactic} {Language} for the {System} {Coq}},
  isbn      = {978-3-540-44404-6},
  doi       = {10.1007/3-540-44404-1_7},
  abstract  = {We propose a new tactic language for the system Coq, which is intended to enrich the current tactic combinators (tacticals). This language is based on a functional core with recursors and matching operators for Coq terms but also for proof contexts. It can be used directly in proof scripts or in toplevel definitions (tactic definitions). We show that the implementation of this language involves considerable changes in the interpretation of proof scripts, essentially due to the matching operators. We give some examples which solve small proof parts locally and some others which deal with non-trivial problems. Finally, we discuss the status of this meta-language with respect to the Coq language and the implementation language of Coq.},
  language  = {en},
  booktitle = {Logic for {Programming} and {Automated} {Reasoning}},
  publisher = {Springer},
  author    = {Delahaye, David},
  editor    = {Parigot, Michel and Voronkov, Andrei},
  year      = {2000},
  pages     = {85--95},
  file      = {Submitted Version:/home/pablo/Zotero/storage/3Y33VS7F/Delahaye - 2000 - A Tactic Language for the System Coq.pdf:application/pdf}
}

@misc{Ltac2,
  author       = {The Coq Development Team},
  howpublished = {\url{https://coq.inria.fr/refman/proof-engine/ltac2.html}},
  title        = {Ltac2},
  year         = {2023},
  urldate      = {2023-09-05}
}

@article{huet_undecidability_1973,
  title        = {The undecidability of unification in third order logic},
  volume       = {22},
  issn         = {0019-9958},
  url          = {http://www.sciencedirect.com/science/article/pii/S001999587390301X},
  doi          = {https://doi.org/10.1016/S0019-9958(73)90301-X},
  abstract     = {The problem of the existence of a unifying substitution between two terms is considered in type theory. This problem is shown to be undecidable, even if we restrict the objects of the language to third order. This means that we are not able to recognize whether two terms have a common instance or not. This result has important implications for the mechanization of higher order logic.},
  pages        = {257 -- 267},
  number       = {3},
  journaltitle = {Information and Control},
  author       = {Huet, Gerard P.},
  date         = {1973},
  year         = {1973}
}

@misc{LeanIPAM,
  author       = {Patrick Massot},
  howpublished = {\url{https://www.imo.universite-paris-saclay.fr/~patrick.massot/Examples/ContinuousFrom.html}},
  title        = {Demo of automatically generated proof text in natural language},
  year         = {2023},
  urldate      = {2023-09-05}
}

@misc{LSP,
  author       = {Microsoft Corporation},
  howpublished = {\url{https://microsoft.github.io/language-server-protocol/}},
  title        = {Official page for Language Server Protocol},
  year         = {2023},
  urldate      = {2023-10-05}
}

@misc{coq-lsp-proto,
  author       = {Gallego Arias, Emilio Jes{\'u}s},
  howpublished = {\url{https://github.com/ejgallego/coq-lsp/blob/main/etc/doc/PROTOCOL.md}},
  title        = {coq-lsp protocol documentation},
  year         = {2023},
  urldate      = {2023-10-05}
}

@misc{VsCoq,
  author       = {Maxime Dénès},
  howpublished = {\url{https://github.com/coq-community/vscoq}},
  title        = {VsCoq GitHub repository},
  year         = {2023},
  urldate      = {2023-10-05}
}

@unpublished{LucTalk,
  title  = {A graphical interface for diagrammatic proofs in proof assistants},
  author = {Chabassier, Luc and Barras, Bruno},
  year   = {2023},
  note   = {29th International Conference on Types for Proofs and Programs},
  url    = {https://easychair.org/smart-program/TYPES2023/2023-06-13.html}
}

@inproceedings{berry_chemical_1989,
  address   = {New York, NY, USA},
  series    = {{POPL} '90},
  title     = {The chemical abstract machine},
  isbn      = {978-0-89791-343-0},
  url       = {https://doi.org/10.1145/96709.96717},
  doi       = {10.1145/96709.96717},
  abstract  = {We introduce a new kind of abstract machine based on the chemical metaphor used in the Γ language of Banâtre \& al. States of a machine are chemical solutions where floating molecules can interact according to reaction rules. Solutions can be stratified by encapsulating subsolutions within membranes that force reactions to occur locally. We illustrate the use of this model by describing the operational semantics of the TCCS and CCS process calculi. We also show how to extract a higher-order concurrent λ-calculus out of the basic concepts of the chemical abstract machine.},
  urldate   = {2022-05-02},
  booktitle = {Proceedings of the 17th {ACM} {SIGPLAN}-{SIGACT} symposium on {Principles} of programming languages},
  publisher = {Association for Computing Machinery},
  author    = {Berry, Gerard and Boudol, Gerard},
  month     = dec,
  year      = {1989},
  pages     = {81--94},
  file      = {Full Text PDF:/home/pablo/Zotero/storage/Y4LCFLBF/Berry and Boudol - 1989 - The chemical abstract machine.pdf:application/pdf}
}

@phdthesis{guenot_nested_2013,
  type     = {phdthesis},
  title    = {Nested {Deduction} in {Logical} {Foundations} for {Computation}},
  url      = {https://pastel.archives-ouvertes.fr/pastel-00929908},
  abstract = {This thesis investigates the use of deep inference formalisms as basis for a computational interpretation of proof systems, following the two main approaches: proofs-as-programs and proof-search-as-computation. The first contribution is the development of a family of proof systems for intuitionistic logic in the calculus of structures and in nested sequents, for which internal normalisation procedures are given. One of these procedure is then interpreted in terms of computation, as a refinement of the Curry-Howard correspondence allowing to introduce a form of sharing and communication operators in a lambda-calculus with explicit substitution. On the side of proof-search, the notion of focused proof in linear logic is transferred from the sequent calculus into the calculus of structures, where it yields an incremental form of focusing, with a simple proof of completeness. Finally, another interpretation of proof-search is given through the encoding of reduction in a lambda-calculus with explicit substitution into the inference rules of a subsystem of intuitionistic logic in the calculus of structures.},
  language = {en},
  urldate  = {2021-03-05},
  school   = {Ecole Polytechnique X},
  author   = {Guenot, Nicolas},
  month    = apr,
  year     = {2013},
  file     = {Full Text PDF:/home/pablo/Zotero/storage/5F6R48ZL/Guenot - 2013 - Nested Deduction in Logical Foundations for Comput.pdf:application/pdf;Snapshot:/home/pablo/Zotero/storage/WHF5UC8K/en.html:text/html}
}

@book{tractatus-chemical,
  author    = {Wittgenstein, Ludwig},
  % editor    = {Project Gutenberg},
  publisher = {Project Gutenberg},
  title     = {Tractatus Logico-Philosophicus},
  year      = {2010},
  url       = {https://www.gutenberg.org/files/5740/5740-pdf.pdf},
  urldate   = {2023-08-14},
  pages          = {11},
}

@article{wittgenstein-1922,
  added-at  = {2009-10-05T18:01:22.000+0200},
  author    = {Wittgenstein, L.},
  biburl    = {https://www.bibsonomy.org/bibtex/219e33df557e74d1d782d0cc66ec63847/poltrock},
  editor    = {D.F.Pears},
  interhash = {c39a1b93744c957f9098b1826bb2c2a9},
  intrahash = {19e33df557e74d1d782d0cc66ec63847},
  journal   = {London: Routledge, 1981},
  keywords  = {wittgenstein_1922},
  timestamp = {2009-10-05T18:01:22.000+0200},
  title     = {Tractatus Logico-Philosophicus},
  url       = {http://scholar.google.de/scholar.bib?q=info:1G2GoIkyCZIJ:scholar.google.com/&output=citation&hl=de&ct=citation&cd=0},
  year      = 1922
}



@inbook{Roberts1973-chemical,
  author    = {Don D. Roberts},
  title     = {The Existential Graphs of Charles S. Peirce},
  publisher = {The Hague: Mouton},
  year      = {1973},
  pages     = {17-18},
  chapter   = {2},
  url       = {https://www.felsemiotica.com/descargas/Roberts-Don-D.-The-Existential-Graphs-of-Charles-S.-Peirce.pdf}
}

@incollection{klement_russells_2020,
	edition = {Spring 2020},
	title = {Russell’s {Logical} {Atomism}},
	url = {https://plato.stanford.edu/archives/spr2020/entries/logical-atomism/},
	abstract = {Bertrand Russell (1872–1970) described his philosophy as a kind of“logical atomism”, by which he meant to endorse both a metaphysicalview and a certain methodology for doing philosophy. The metaphysicalview amounts to the claim that the world consists of a plurality ofindependently existing things exhibiting qualities and standing inrelations. According to logical atomism, all truths are ultimatelydependent upon a layer of atomic facts, which consist either of asimple particular exhibiting a quality, or multiple simple particularsstanding in a relation. The methodological view recommends a process ofanalysis, whereby one attempts to define or reconstruct more complexnotions or vocabularies in terms of simpler ones. This process often revealsthat what we take to be brute necessities are instead purely logical. According to Russell,at least early on during his logical atomist phase, such an analysiscould eventually result in a language containing only wordsrepresenting simple particulars, the simple properties and relationsthereof, and logical constants, which, despite this limited vocabulary,could adequately capture all truths.},
	urldate = {2023-08-14},
	booktitle = {The {Stanford} {Encyclopedia} of {Philosophy}},
	publisher = {Metaphysics Research Lab, Stanford University},
	author = {Klement, Kevin},
	editor = {Zalta, Edward N.},
	year = {2020},
	keywords = {analysis, descriptions, facts, Frege, Gottlob, logical constructions, Moore, George Edward, Ockham [Occam], William, Principia Mathematica, propositional function, propositions, Russell, Bertrand, sense data, simplicity, Vienna Circle, Wittgenstein, Ludwig, Wittgenstein, Ludwig: logical atomism},
	file = {SEP - Snapshot:/home/pablo/Zotero/storage/WZUX2RVX/logical-atomism.html:text/html},
}

@inbook{Roberts1973-inactu,
  author    = {Don D. Roberts},
  title     = {The Existential Graphs of Charles S. Peirce},
  publisher = {The Hague: Mouton},
  year      = {1973},
  pages     = {112-113},
  chapter   = {7},
  url       = {https://www.felsemiotica.com/descargas/Roberts-Don-D.-The-Existential-Graphs-of-Charles-S.-Peirce.pdf}
}